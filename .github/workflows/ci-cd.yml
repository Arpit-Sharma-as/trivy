name: CI-CD Pipeline with Trivy Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Log in to DockerHub (if pushing)
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4️⃣ Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME=my-app:${{ github.sha }}
          docker build -t $IMAGE_NAME .
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      # 5️⃣ Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      # 6️⃣ Scan Docker image with Trivy
      - name: Run Trivy scan
        run: |
          mkdir -p trivy-reports
          trivy image --severity HIGH,CRITICAL --exit-code 1 --format table -o trivy-reports/report.txt $IMAGE_NAME || true
          trivy image --format json -o trivy-reports/report.json $IMAGE_NAME || true

      # 7️⃣ Upload Trivy scan reports
      - name: Upload Trivy report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: trivy-reports/

